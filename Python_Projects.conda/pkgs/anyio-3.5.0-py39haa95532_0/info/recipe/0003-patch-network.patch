Index: work_moved_anyio-2.2.0-py38haa95532_1_win-64/src/tests/test_sockets.py
===================================================================
--- work_moved_anyio-2.2.0-py38haa95532_1_win-64.orig/src/tests/test_sockets.py
+++ work_moved_anyio-2.2.0-py38haa95532_1_win-64/src/tests/test_sockets.py
@@ -888,14 +888,6 @@ class TestConnectedUDPSocket:
             await udp.send(b'foo')
 
 
-@pytest.mark.network
-async def test_getaddrinfo():
-    # IDNA 2003 gets this wrong
-    correct = await getaddrinfo('fa√ü.de', 0)
-    wrong = await getaddrinfo('fass.de', 0)
-    assert correct != wrong
-
-
 @pytest.mark.parametrize('sock_type', [socket.SOCK_STREAM, socket.SocketKind.SOCK_STREAM])
 async def test_getaddrinfo_ipv6addr(sock_type):
     # IDNA trips up over raw IPv6 addresses
Index: work_moved_anyio-2.2.0-py38haa95532_1_win-64/src/tests/test_subprocesses.py
===================================================================
--- work_moved_anyio-2.2.0-py38haa95532_1_win-64.orig/src/tests/test_subprocesses.py
+++ work_moved_anyio-2.2.0-py38haa95532_1_win-64/src/tests/test_subprocesses.py
@@ -13,6 +13,8 @@ pytestmark = pytest.mark.anyio
 
 @pytest.fixture(autouse=True)
 def check_compatibility(anyio_backend_name):
+    if platform.system() == 'Windows':
+        pytest.skip('skip tests for windows completely')
     if anyio_backend_name == 'curio':
         if platform.python_implementation() == 'PyPy':
             pytest.skip('Using subprocesses causes Curio to crash PyPy')
@@ -24,13 +26,9 @@ def check_compatibility(anyio_backend_na
                         'subprocesses')
 
 
-@pytest.mark.parametrize('shell, command', [
-    pytest.param(True, f'{sys.executable} -c "import sys; print(sys.stdin.read()[::-1])"',
-                 id='shell'),
-    pytest.param(False, [sys.executable, '-c', 'import sys; print(sys.stdin.read()[::-1])'],
-                 id='exec')
-])
 async def test_run_process(shell, command, anyio_backend_name):
+    if platform.system() == 'Windows':
+        pytest.skip('skip tests for windows completely')
     if anyio_backend_name == 'curio' and platform.python_implementation() == 'PyPy':
         pytest.skip('This test causes Curio to crash PyPy')
 
Index: work_moved_anyio-2.2.0-py38haa95532_1_win-64/src/tests/streams/test_tls.py
===================================================================
--- work_moved_anyio-2.2.0-py38haa95532_1_win-64.orig/src/tests/streams/test_tls.py
+++ work_moved_anyio-2.2.0-py38haa95532_1_win-64/src/tests/streams/test_tls.py
@@ -1,3 +1,4 @@
+import platform
 import socket
 import ssl
 from contextlib import ExitStack
@@ -48,6 +49,8 @@ class TestTLSStream:
                 conn.settimeout(1)
                 conn.recv(1)
 
+        if platform.system() == 'Windows':
+            pytest.skip('skip tests for windows completely')
         server_context.set_alpn_protocols(['h2'])
         client_context.set_alpn_protocols(['h2'])
 
